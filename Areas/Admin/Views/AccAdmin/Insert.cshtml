@model Anemone.Models.EF.user
@using Anemone.Models.DAO;
@{
    ViewBag.Title = "Insert";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";

    var user = new UserDAO();
    var lstuserType = user.getAlluserType();
}
@section header{
    Thêm người dùng mới
}

<div class="card shadow mb-4">
    @using (Html.BeginForm("Insert", "AccAdmin", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-xl-5 col-lg-7">
                <div class="form-group">
                    @Html.LabelFor(model => model.userName, htmlAttributes: new { @class = "" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.userName, new { htmlAttributes = new { @class = "form-control", required = true } })
                        @Html.ValidationMessageFor(model => model.userName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", required = true } })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control", required = true } })
                        @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control", required = true } })
                        @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="col-xl-5 col-lg-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "", required = true } })
                        @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.pass, htmlAttributes: new { @class = "" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.pass, new { htmlAttributes = new { @class = "form-control", required = true, type = "password" } })
                        @Html.ValidationMessageFor(model => model.pass, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.userTypeID, htmlAttributes: new { @class = "" })
                    <div class="col-md-10">
                        <select class="" name="userTypeID">
                            @foreach (var item in lstuserType)
                            {
                                <option value="@item.userTypeID">@item.userTypeName</option>
                            }
                        </select>
                        @Html.ValidationMessageFor(model => model.userTypeID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>

    </div>
    }
    </div>
    @*<div>
            @Html.ActionLink("Back to List", "Index")
        </div>*@
